// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyecto.Models;

#nullable disable

namespace proyecto.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20230428064955_metodoPago1")]
    partial class metodoPago1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("proyecto.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__8A3D240CED1907F1");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("proyecto.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("proyecto.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"), 1L, 1);

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal?>("ImpuestoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCompra");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("proyecto.Models.Cotizacion", b =>
                {
                    b.Property<int>("IdCotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCotizacion"), 1L, 1);

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal?>("ImpuestoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCotizacion");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Cotizacion");
                });

            modelBuilder.Entity("proyecto.Models.DetalleCompra", b =>
                {
                    b.Property<int>("IdDetalleCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleCompra"), 1L, 1);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetalleCompra");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetalleCompras");
                });

            modelBuilder.Entity("proyecto.Models.DetalleCotizacion", b =>
                {
                    b.Property<int>("IdDetalleCotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleCotizacion"), 1L, 1);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdCotizacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetalleCotizacion");

                    b.HasIndex("IdCotizacion");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetalleCotizacion");
                });

            modelBuilder.Entity("proyecto.Models.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"), 1L, 1);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__DetalleV__BFE2843F851DE491");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("proyecto.Models.DetalleVentaCredito", b =>
                {
                    b.Property<int>("IdDetalleVentaCredito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVentaCredito"), 1L, 1);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdVentaCredito")
                        .HasColumnType("int");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetalleVentaCredito");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVentaCredito");

                    b.ToTable("DetalleVentaCredito");
                });

            modelBuilder.Entity("proyecto.Models.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpresa"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RucDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpresa");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("proyecto.Models.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"), 1L, 1);

                    b.Property<string>("NombreMarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMarca");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("proyecto.Models.NumeroDocumento", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id");

                    b.ToTable("NumeroDocumento", (string)null);
                });

            modelBuilder.Entity("proyecto.Models.Pago", b =>
                {
                    b.Property<int>("IdPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPago"), 1L, 1);

                    b.Property<int>("CuotaPagar")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdVentaCredito")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoPendiente")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorPagar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPago");

                    b.HasIndex("IdVentaCredito");

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("proyecto.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermiso"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPermiso");

                    b.ToTable("Permiso");
                });

            modelBuilder.Entity("proyecto.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"), 1L, 1);

                    b.Property<string>("Codigo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<int?>("IdMarca")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("IdMarca");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__07F4A132B3DE1441");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdMarca");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("proyecto.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruc_Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProveedor");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("proyecto.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__3C872F76D60D3150");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("proyecto.Models.RolPermiso", b =>
                {
                    b.Property<int>("IdRolPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRolPermiso"), 1L, 1);

                    b.Property<int?>("IdPermiso")
                        .HasColumnType("int");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.HasKey("IdRolPermiso");

                    b.HasIndex("IdPermiso");

                    b.HasIndex("IdRol");

                    b.ToTable("RolPermiso");
                });

            modelBuilder.Entity("proyecto.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.Property<string>("Clave")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("clave");

                    b.Property<string>("Correo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("correo");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("Nombre")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("telefono");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A6E137D226");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("proyecto.Models.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"), 1L, 1);

                    b.Property<string>("CodigoSeguridad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdNumeroDocumento")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<decimal?>("ImpuestoTotal")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("impuestoTotal");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("numeroDocumento");

                    b.Property<string>("NumeroTarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("subTotal");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipoDocumento");

                    b.Property<string>("TipoVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total");

                    b.HasKey("IdVenta")
                        .HasName("PK__Venta__077D5614D2880592");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdNumeroDocumento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("proyecto.Models.VentaCredito", b =>
                {
                    b.Property<int>("IdVentaCredito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVentaCredito"), 1L, 1);

                    b.Property<int>("CantidadMeses")
                        .HasColumnType("int");

                    b.Property<string>("CodigoSeguridad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CuotaInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CuotaMensual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CuotasPagadas")
                        .HasColumnType("int");

                    b.Property<bool?>("EsCancelada")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal?>("ImpuestoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdVentaCredito");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("VentaCredito");
                });

            modelBuilder.Entity("proyecto.Models.Compra", b =>
                {
                    b.HasOne("proyecto.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("proyecto.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Empresa");

                    b.Navigation("Proveedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("proyecto.Models.Cotizacion", b =>
                {
                    b.HasOne("proyecto.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("proyecto.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("proyecto.Models.DetalleCompra", b =>
                {
                    b.HasOne("proyecto.Models.Compra", "Compra")
                        .WithMany("DetalleCompra")
                        .HasForeignKey("IdCompra");

                    b.HasOne("proyecto.Models.Producto", "Producto")
                        .WithMany("DetalleCompra")
                        .HasForeignKey("IdProducto");

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("proyecto.Models.DetalleCotizacion", b =>
                {
                    b.HasOne("proyecto.Models.Cotizacion", "Cotizacion")
                        .WithMany("DetalleCotizacion")
                        .HasForeignKey("IdCotizacion");

                    b.HasOne("proyecto.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto");

                    b.Navigation("Cotizacion");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("proyecto.Models.DetalleVenta", b =>
                {
                    b.HasOne("proyecto.Models.Producto", "IdProductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__DetalleVe__idPro__60A75C0F");

                    b.HasOne("proyecto.Models.Venta", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__DetalleVe__idVen__5FB337D6");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("proyecto.Models.DetalleVentaCredito", b =>
                {
                    b.HasOne("proyecto.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto");

                    b.HasOne("proyecto.Models.VentaCredito", "VentaCredito")
                        .WithMany("DetalleVentaCredito")
                        .HasForeignKey("IdVentaCredito");

                    b.Navigation("Producto");

                    b.Navigation("VentaCredito");
                });

            modelBuilder.Entity("proyecto.Models.Pago", b =>
                {
                    b.HasOne("proyecto.Models.VentaCredito", "VentaCredito")
                        .WithMany()
                        .HasForeignKey("IdVentaCredito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VentaCredito");
                });

            modelBuilder.Entity("proyecto.Models.Producto", b =>
                {
                    b.HasOne("proyecto.Models.Categoria", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK__Producto__idCate__5812160E");

                    b.HasOne("proyecto.Models.Marca", "IdMarcaNavigation")
                        .WithMany()
                        .HasForeignKey("IdMarca");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdMarcaNavigation");
                });

            modelBuilder.Entity("proyecto.Models.RolPermiso", b =>
                {
                    b.HasOne("proyecto.Models.Permiso", "Permiso")
                        .WithMany()
                        .HasForeignKey("IdPermiso");

                    b.HasOne("proyecto.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("IdRol");

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("proyecto.Models.Usuario", b =>
                {
                    b.HasOne("proyecto.Models.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Usuario__idRol__3A81B327");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("proyecto.Models.Venta", b =>
                {
                    b.HasOne("proyecto.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("proyecto.Models.NumeroDocumento", "NumeroDocumentoVenta")
                        .WithMany()
                        .HasForeignKey("IdNumeroDocumento");

                    b.HasOne("proyecto.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Venta__idUsuario__5CD6CB2B");

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("NumeroDocumentoVenta");
                });

            modelBuilder.Entity("proyecto.Models.VentaCredito", b =>
                {
                    b.HasOne("proyecto.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyecto.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("proyecto.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("Cliente");

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("proyecto.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("proyecto.Models.Compra", b =>
                {
                    b.Navigation("DetalleCompra");
                });

            modelBuilder.Entity("proyecto.Models.Cotizacion", b =>
                {
                    b.Navigation("DetalleCotizacion");
                });

            modelBuilder.Entity("proyecto.Models.Producto", b =>
                {
                    b.Navigation("DetalleCompra");

                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("proyecto.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("proyecto.Models.Usuario", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("proyecto.Models.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("proyecto.Models.VentaCredito", b =>
                {
                    b.Navigation("DetalleVentaCredito");
                });
#pragma warning restore 612, 618
        }
    }
}
